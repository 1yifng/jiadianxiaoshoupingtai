{"remainingRequest":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\components\\common\\Editor.vue?vue&type=style&index=0&id=4c8019d1&lang=css","dependencies":[{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\components\\common\\Editor.vue","mtime":1744987916274},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1743781065361},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1743781065757},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1743781065333},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743781066581},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1743781065439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiDnvJbovpHlmajln7rnoYDmoLflvI8gKi8NCi5lZGl0b3Igew0KICBsaW5lLWhlaWdodDogbm9ybWFsICFpbXBvcnRhbnQ7IC8qIOmHjee9ruihjOmrmCAqLw0KfQ0KDQovKiDorr7nva7nvJbovpHlmajlrrnlmajpq5jluqYgKi8NCi5xbC1jb250YWluZXIgew0KICBoZWlnaHQ6IDQwMHB4OyAvKiDlm7rlrprpq5jluqbvvIzlj6/osIPmlbQgKi8NCn0NCg=="},{"version":3,"sources":["Editor.vue"],"names":[],"mappings":";AA6IA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Editor.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 图片上传组件（隐藏） -->\r\n    <!-- 用于富文本编辑器中的图片上传功能 -->\r\n<!--    name=\"file\" 上传文件的参数名-->\r\n<!--    :headers=\"header\" 请求头（含Token）-->\r\n<!--    :show-file-list=\"false\" 不显示文件列表-->\r\n<!--    :on-success=\"uploadSuccess\" 上传成功回调-->\r\n<!--    :on-error=\"uploadError\"  上传失败回调-->\r\n<!--    :before-upload=\"beforeUpload\" 上传前处理-->\r\n    <el-upload\r\n        class=\"avatar-uploader\"\r\n        :action=\"getActionUrl\"\r\n    name=\"file\"\r\n    :headers=\"header\"\r\n    :show-file-list=\"false\"\r\n    :on-success=\"uploadSuccess\"\r\n    :on-error=\"uploadError\"\r\n    :before-upload=\"beforeUpload\"\r\n    ></el-upload>\r\n\r\n    <!-- 富文本编辑器主体 -->\r\n<!--    v-model=\"content\"       // 双向绑定编辑器内容-->\r\n<!--    ref=\"myQuillEditor\"     // 获取编辑器实例的引用-->\r\n<!--    :options=\"editorOption\" // 编辑器配置-->\r\n<!--    @blur=\"onEditorBlur($event)\"   // 失去焦点事件-->\r\n<!--    @focus=\"onEditorFocus($event)\" // 获取焦点事件-->\r\n<!--    @change=\"onEditorChange($event)\" // 内容变化事件-->\r\n    <quill-editor\r\n        class=\"editor\"\r\n        v-model=\"content\"\r\n    ref=\"myQuillEditor\"\r\n    :options=\"editorOption\"\r\n    @blur=\"onEditorBlur($event)\"\r\n    @focus=\"onEditorFocus($event)\"\r\n    @change=\"onEditorChange($event)\"\r\n    ></quill-editor>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 导入富文本编辑器相关组件和样式\r\nimport { quillEditor } from \"vue-quill-editor\";\r\nimport \"quill/dist/quill.core.css\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport \"quill/dist/quill.bubble.css\";\r\n\r\nexport default {\r\n  // 组件接收的props\r\n  props: {\r\n    value: {  // 编辑器内容（v-model绑定）\r\n      type: String\r\n    },\r\n    action: { // 图片上传接口路径\r\n      type: String\r\n    },\r\n    maxSize: { // 图片大小限制（默认4MB）\r\n      type: Number,\r\n      default: 4000\r\n    }\r\n  },\r\n\r\n  // 注册子组件\r\n  components: {\r\n    quillEditor\r\n  },\r\n\r\n  // 组件数据\r\n  data() {\r\n    return {\r\n      content: \"\", // 编辑器内容\r\n      quillUpdateImg: false, // 图片上传状态标记\r\n      editorOption: { // 编辑器配置\r\n        placeholder: \"\", // 占位文本\r\n        theme: \"snow\",  // 主题样式\r\n        modules: {\r\n          toolbar: false // 禁用工具栏（设为false表示不显示工具栏）\r\n        }\r\n      },\r\n      header: { // 上传请求头\r\n        'Token': this.$storage.get(\"Token\") // 从本地存储获取Token\r\n      }\r\n    };\r\n  },\r\n\r\n  // 计算属性\r\n  computed: {\r\n    // 构造完整的图片上传URL\r\n    getActionUrl: function() {\r\n      this.setContent(this.value); // 同步内容\r\n      return `/${this.$base.name}/` + this.action; // 拼接基础路径和接口路径\r\n    }\r\n  },\r\n\r\n  // 方法\r\n  methods: {\r\n    // 设置编辑器内容\r\n    setContent(value) {\r\n      this.content = value;\r\n    },\r\n\r\n    // 编辑器失去焦点事件（空实现，可按需扩展）\r\n    onEditorBlur() {},\r\n\r\n    // 编辑器获取焦点事件（空实现，可按需扩展）\r\n    onEditorFocus() {},\r\n\r\n    // 编辑器内容变化事件\r\n    onEditorChange() {\r\n      this.$emit(\"input\", this.content); // 触发v-model更新\r\n    },\r\n\r\n    // 图片上传前的处理\r\n    beforeUpload() {\r\n      this.quillUpdateImg = true; // 标记上传开始\r\n    },\r\n\r\n    // 图片上传成功回调\r\n    uploadSuccess(res, file) {\r\n      let quill = this.$refs.myQuillEditor.quill; // 获取编辑器实例\r\n      if (res.code === 0) { // 上传成功\r\n        let length = quill.getSelection().index; // 获取当前光标位置\r\n        // 在光标处插入图片\r\n        quill.insertEmbed(length, \"image\", this.$base.url + \"upload/\" + res.file);\r\n        quill.setSelection(length + 1); // 移动光标到图片后\r\n      } else {\r\n        this.$message.error(\"图片插入失败\"); // 错误提示\r\n      }\r\n      this.quillUpdateImg = false; // 标记上传结束\r\n    },\r\n\r\n    // 图片上传失败回调\r\n    uploadError() {\r\n      this.quillUpdateImg = false; // 标记上传结束\r\n      this.$message.error(\"图片插入失败\"); // 错误提示\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 编辑器基础样式 */\r\n.editor {\r\n  line-height: normal !important; /* 重置行高 */\r\n}\r\n\r\n/* 设置编辑器容器高度 */\r\n.ql-container {\r\n  height: 400px; /* 固定高度，可调整 */\r\n}\r\n</style>"]}]}