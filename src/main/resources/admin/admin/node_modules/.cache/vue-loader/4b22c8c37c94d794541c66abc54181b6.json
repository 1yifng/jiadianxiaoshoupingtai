{"remainingRequest":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\config\\list.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\config\\list.vue","mtime":1746197745982},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1743781066696},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743781066581},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1743781065439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovLyDlvJXlhaXmt7vliqAv5L+u5pS557uE5Lu2DQppbXBvcnQgQWRkT3JVcGRhdGUgZnJvbSAiLi9hZGQtb3ItdXBkYXRlLnZ1ZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgLy8g5rOo5YaM57uE5Lu2DQogIGNvbXBvbmVudHM6IHsNCiAgICBBZGRPclVwZGF0ZSwNCiAgfSwNCiAgLy8g57uE5Lu255qE5pWw5o2uDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIC8vIOaQnOe0ouihqOWNleaVsOaNrg0KICAgICAgc2VhcmNoRm9ybTogew0KICAgICAgICBuYW1lOiAiIg0KICAgICAgfSwNCiAgICAgIC8vIOihqOagvOaVsOaNruWIl+ihqA0KICAgICAgZGF0YUxpc3Q6IFtdLA0KICAgICAgLy8g5b2T5YmN6aG156CBDQogICAgICBwYWdlSW5kZXg6IDEsDQogICAgICAvLyDmr4/pobXmmL7npLrmlbDph48NCiAgICAgIHBhZ2VTaXplOiAxMCwNCiAgICAgIC8vIOaAu+iusOW9leaVsA0KICAgICAgdG90YWxQYWdlOiAwLA0KICAgICAgLy8g6KGo5qC85pWw5o2u5Yqg6L2954q25oCBDQogICAgICBkYXRhTGlzdExvYWRpbmc6IGZhbHNlLA0KICAgICAgLy8g6YCJ5Lit55qE5pWw5o2u6aG55YiX6KGoDQogICAgICBkYXRhTGlzdFNlbGVjdGlvbnM6IFtdLA0KICAgICAgLy8g5piv5ZCm5pi+56S65YiX6KGo6aG155qE5qCH5b+XDQogICAgICBzaG93RmxhZzogdHJ1ZSwNCiAgICAgIC8vIOaYr+WQpuaYvuekuua3u+WKoC/kv67mlLnpobXpnaLnmoTmoIflv5cNCiAgICAgIGFkZE9yVXBkYXRlRmxhZzogZmFsc2UsDQogICAgICAvLyDooajmoLzphY3nva7pobkNCiAgICAgIGNvbnRlbnRzOiB7DQogICAgICAgIC8vIOaYr+WQpuaYvuekuuihqOagvOmAieaLqeWIlw0KICAgICAgICB0YWJsZVNlbGVjdGlvbjogdHJ1ZSwNCiAgICAgICAgLy8g5piv5ZCm5pi+56S66KGo5qC857Si5byV5YiXDQogICAgICAgIHRhYmxlSW5kZXg6IHRydWUsDQogICAgICAgIC8vIOavj+mhteaYvuekuuaVsOmHjw0KICAgICAgICBwYWdlRWFjaE51bTogMTANCiAgICAgIH0NCiAgICB9Ow0KICB9LA0KICAvLyDnu4Tku7bliJvlu7rlrozmiJDlkI7osIPnlKjnmoTpkqnlrZDlh73mlbDvvIzojrflj5bmlbDmja7liJfooagNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmdldERhdGFMaXN0KCk7DQogIH0sDQogIC8vIOe7hOS7tueahOaWueazlQ0KICBtZXRob2RzOiB7DQogICAgLy8g6I635Y+W5pWw5o2u5YiX6KGo55qE5pa55rOVDQogICAgZ2V0RGF0YUxpc3QoKSB7DQogICAgICAvLyDorr7nva7ooajmoLzmlbDmja7liqDovb3nirbmgIHkuLogdHJ1ZQ0KICAgICAgdGhpcy5kYXRhTGlzdExvYWRpbmcgPSB0cnVlOw0KICAgICAgLy8g5a6a5LmJ6K+35rGC5Y+C5pWwDQogICAgICBsZXQgcGFyYW1zID0gew0KICAgICAgICAvLyDlvZPliY3pobXnoIENCiAgICAgICAgcGFnZTogdGhpcy5wYWdlSW5kZXgsDQogICAgICAgIC8vIOavj+mhteaYvuekuuaVsOmHjw0KICAgICAgICBsaW1pdDogdGhpcy5wYWdlU2l6ZSwNCiAgICAgICAgLy8g5o6S5bqP5a2X5q61DQogICAgICAgIHNvcnQ6ICdpZCcsDQogICAgICB9Ow0KDQogICAgICAvLyDlpoLmnpzmkJzntKLooajljZXkuK3nmoTlkI3np7DlrZfmrrXmnInlgLzvvIzmt7vliqDliLDor7fmsYLlj4LmlbDkuK0NCiAgICAgIC8v5pyJ5YC85Luj6KGo55So5oi35Zyo5pCc57Si5qGG6L6T5YWl5LqG5paH5a2X77yM5ZyoIHBhcmFtcyDlr7nosaHkuK3mt7vliqDkuIDkuKogbmFtZSDlsZ7mgKfvvIzlubbmiorlroPnmoTlgLzorr7nva7kuLrljIXlkKvmkJzntKLlhbPplK7lrZfnmoTmqKHns4rmn6Xor6LlrZfnrKbkuLINCiAgICAgIC8vJSDkvY3kuo7ovpPlhaXnmoTmloflrZfliY3pnaLvvIzmhI/lkbPnnYDmkJzntKLnu5Pmnpzph4zor6XmloflrZflj6/ku6Xlh7rnjrDlnKjku7vmhI/kvY3nva7jgIINCiAgICAgIC8vJSDkvY3kuo7ovpPlhaXnmoTmloflrZflkI7pnaLvvIzmhI/lkbPnnYDmkJzntKLnu5Pmnpzph4zor6XmloflrZflkI7pnaLlj6/ku6XmnInku7vmhI/lrZfnrKbjgIINCiAgICAgIGlmKHRoaXMuc2VhcmNoRm9ybS5uYW1lKSB7DQogICAgICAgIHBhcmFtc1snbmFtZSddID0gJyUnICsgdGhpcy5zZWFyY2hGb3JtLm5hbWUgKyAnJSc7DQogICAgICB9DQoNCiAgICAgIC8vIOWPkemAgSBIVFRQIOivt+axguiOt+WPluaVsOaNruWIl+ihqA0KICAgICAgLy9wYXJhbXMg5a+56LGh5Lya5L2c5Li65p+l6K+i5Y+C5pWw6YCa6L+HIHRoaXMuJGh0dHAg5Y+R6YCB5Yiw5ZCO56uv55qEIGNvbmZpZy9wYWdlIOaOpeWPo+OAgg0KICAgICAgLy8g5ZCO56uv5pyN5Yqh5Zmo5o6l5pS25Yiw6L+Z5Lqb5Y+C5pWw5ZCO77yM5Lya5L6d5o2uIG5hbWUg5Y+C5pWw6L+b6KGM5qih57OK5p+l6K+i77yM5om+5Ye65omA5pyJ5ZCN56ew5YyF5ZCr55So5oi36L6T5YWl5YWz6ZSu5a2X55qE6K6w5b2V77yM5YaN5oqK5p+l6K+i57uT5p6c6L+U5Zue57uZ5YmN56uv44CCDQogICAgICB0aGlzLiRodHRwKHsNCiAgICAgICAgdXJsOiAiY29uZmlnL3BhZ2UiLA0KICAgICAgICBtZXRob2Q6ICJnZXQiLA0KICAgICAgICBwYXJhbXM6IHBhcmFtcw0KICAgICAgfSkudGhlbigoeyBkYXRhIH0pID0+IHsNCiAgICAgICAgLy8g5aaC5p6c5ZON5bqU5pWw5o2u5a2Y5Zyo5LiU54q25oCB56CB5Li6IDANCiAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5jb2RlID09PSAwKSB7DQogICAgICAgICAgLy8g5pu05paw6KGo5qC85pWw5o2u5YiX6KGoDQogICAgICAgICAgdGhpcy5kYXRhTGlzdCA9IGRhdGEuZGF0YS5saXN0Ow0KICAgICAgICAgIC8vIOabtOaWsOaAu+iusOW9leaVsA0KICAgICAgICAgIHRoaXMudG90YWxQYWdlID0gZGF0YS5kYXRhLnRvdGFsOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIC8vIOa4heepuuihqOagvOaVsOaNruWIl+ihqA0KICAgICAgICAgIHRoaXMuZGF0YUxpc3QgPSBbXTsNCiAgICAgICAgICAvLyDmgLvorrDlvZXmlbDorr7kuLogMA0KICAgICAgICAgIHRoaXMudG90YWxQYWdlID0gMDsNCiAgICAgICAgfQ0KICAgICAgICAvLyDorr7nva7ooajmoLzmlbDmja7liqDovb3nirbmgIHkuLogZmFsc2UNCiAgICAgICAgdGhpcy5kYXRhTGlzdExvYWRpbmcgPSBmYWxzZTsNCiAgICAgIH0pOw0KICAgIH0sDQoNCiAgICAvLyDmr4/pobXmlbDph4/lj5jljJbml7bnmoTlpITnkIbmlrnms5UNCiAgICBzaXplQ2hhbmdlSGFuZGxlKHZhbCkgew0KICAgICAgLy8g5pu05paw5q+P6aG15pi+56S65pWw6YePDQogICAgICB0aGlzLnBhZ2VTaXplID0gdmFsOw0KICAgICAgLy8g5b2T5YmN6aG156CB6YeN572u5Li6IDENCiAgICAgIHRoaXMucGFnZUluZGV4ID0gMTsNCiAgICAgIC8vIOmHjeaWsOiOt+WPluaVsOaNruWIl+ihqA0KICAgICAgdGhpcy5nZXREYXRhTGlzdCgpOw0KICAgIH0sDQoNCiAgICAvLyDlvZPliY3pobXnoIHlj5jljJbml7bnmoTlpITnkIbmlrnms5UNCiAgICBjdXJyZW50Q2hhbmdlSGFuZGxlKHZhbCkgew0KICAgICAgLy8g5pu05paw5b2T5YmN6aG156CBDQogICAgICB0aGlzLnBhZ2VJbmRleCA9IHZhbDsNCiAgICAgIC8vIOmHjeaWsOiOt+WPluaVsOaNruWIl+ihqA0KICAgICAgdGhpcy5nZXREYXRhTGlzdCgpOw0KICAgIH0sDQoNCiAgICAvLyDooajmoLzpgInmi6npobnlj5jljJbml7bnmoTlpITnkIbmlrnms5UNCiAgICBzZWxlY3Rpb25DaGFuZ2VIYW5kbGVyKHZhbCkgew0KICAgICAgLy8g5pu05paw6YCJ5Lit55qE5pWw5o2u6aG55YiX6KGoDQogICAgICB0aGlzLmRhdGFMaXN0U2VsZWN0aW9ucyA9IHZhbDsNCiAgICB9LA0KDQogICAgLy8g5re75YqgL+S/ruaUueeahOWkhOeQhuaWueazlQ0KICAgIGFkZE9yVXBkYXRlSGFuZGxlcihpZCwgdHlwZSkgew0KICAgICAgLy8g6ZqQ6JeP5YiX6KGo6aG1DQogICAgICB0aGlzLnNob3dGbGFnID0gZmFsc2U7DQogICAgICAvLyDmmL7npLrmt7vliqAv5L+u5pS56aG16Z2iDQogICAgICB0aGlzLmFkZE9yVXBkYXRlRmxhZyA9IHRydWU7DQogICAgICAvLyDlnKjkuIvkuIDmrKEgRE9NIOabtOaWsOW+queOr+e7k+adn+S5i+WQjuaJp+ihjOW7tui/n+Wbnuiwgw0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAvLyDosIPnlKjmt7vliqAv5L+u5pS557uE5Lu255qEIGluaXQg5pa55rOV6L+b6KGM5Yid5aeL5YyWDQogICAgICAgIHRoaXMuJHJlZnMuYWRkT3JVcGRhdGUuaW5pdChpZCwgdHlwZSB8fCAnZWxzZScpOw0KICAgICAgfSk7DQogICAgfSwNCg0KICAgIC8vIOWIoOmZpOeahOWkhOeQhuaWueazlQ0KICAgIGRlbGV0ZUhhbmRsZXIoaWQpIHsNCiAgICAgIC8vIOiOt+WPluimgeWIoOmZpOeahCBJRCDliJfooagNCiAgICAgIHZhciBpZHMgPSBpZA0KICAgICAgICAgID8gW051bWJlcihpZCldDQogICAgICAgICAgOiB0aGlzLmRhdGFMaXN0U2VsZWN0aW9ucy5tYXAoaXRlbSA9PiB7DQogICAgICAgICAgICByZXR1cm4gTnVtYmVyKGl0ZW0uaWQpOw0KICAgICAgICAgIH0pOw0KDQogICAgICAvLyDlvLnlh7rnoa7orqTmoYbvvIznoa7orqTmmK/lkKbov5vooYzliKDpmaTmk43kvZwNCiAgICAgIHRoaXMuJGNvbmZpcm0oYOehruWumui/m+ihjFske2lkID8gIuWIoOmZpCIgOiAi5om56YeP5Yig6ZmkIn1d5pON5L2cP2AsICLmj5DnpLoiLCB7DQogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAi56Gu5a6aIiwNCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsDQogICAgICAgIHR5cGU6ICJ3YXJuaW5nIg0KICAgICAgfSkudGhlbigoKSA9PiB7DQogICAgICAgIC8vIOWPkemAgSBIVFRQIOivt+axgui/m+ihjOWIoOmZpOaTjeS9nA0KICAgICAgICB0aGlzLiRodHRwKHsNCiAgICAgICAgICB1cmw6ICJjb25maWcvZGVsZXRlIiwNCiAgICAgICAgICBtZXRob2Q6ICJwb3N0IiwNCiAgICAgICAgICBkYXRhOiBpZHMNCiAgICAgICAgfSkudGhlbigoeyBkYXRhIH0pID0+IHsNCiAgICAgICAgICAvLyDlpoLmnpzlk43lupTmlbDmja7lrZjlnKjkuJTnirbmgIHnoIHkuLogMA0KICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEuY29kZSA9PT0gMCkgew0KICAgICAgICAgICAgLy8g5pi+56S65oiQ5Yqf5o+Q56S65L+h5oGv77yM5o+Q56S65L+h5oGv5raI5aSx5ZCO6YeN5paw6I635Y+W5pWw5o2u5YiX6KGoDQogICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgICAgbWVzc2FnZTogIuaTjeS9nOaIkOWKnyIsDQogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgICAgICAgICAgZHVyYXRpb246IDE1MDAsDQogICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmdldERhdGFMaXN0KCk7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAvLyDmmL7npLrplJnor6/mj5DnpLrkv6Hmga8NCiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZGF0YS5tc2cpOw0KICAgICAgICAgIH0NCiAgICAgICAgfSk7DQogICAgICB9KTsNCiAgICB9LA0KDQogICAgLy8g5pCc57Si55qE5aSE55CG5pa55rOVDQogICAgc2VhcmNoKCkgew0KICAgICAgLy8g5b2T5YmN6aG156CB6YeN572u5Li6IDENCiAgICAgIHRoaXMucGFnZUluZGV4ID0gMTsNCiAgICAgIC8vIOmHjeaWsOiOt+WPluaVsOaNruWIl+ihqA0KICAgICAgdGhpcy5nZXREYXRhTGlzdCgpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["list.vue"],"names":[],"mappings":";AA6JA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/views/modules/config","sourcesContent":["<template>\r\n  <!-- 主内容容器 -->\r\n  <div class=\"main-content\">\r\n    <!-- 使用 v-if 指令判断是否显示列表页，showFlag 为 true 时显示 -->\r\n    <div v-if=\"showFlag\" class=\"config-list-container\">\r\n      <!-- 表单部分，使用 Element UI 的表单组件，设置为内联表单，绑定搜索表单数据 -->\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"form-content\">\r\n        <!-- 表单行，用于布局 -->\r\n        <el-row class=\"ad\">\r\n          <!-- 表单元素项 -->\r\n          <el-form-item>\r\n            <!-- 新增按钮，点击调用 addOrUpdateHandler 方法 -->\r\n            <el-button\r\n                type=\"success\"\r\n                icon=\"el-icon-plus\"\r\n                @click=\"addOrUpdateHandler()\"\r\n            >新增</el-button>\r\n            <!-- 删除按钮，当选中的数据项数量小于等于 0 时禁用，点击调用 deleteHandler 方法 -->\r\n<!--        3、    :disabled=\"dataListSelections.length <= 0\"：若用户未选中任何数据项，该按钮将被禁用-->\r\n<!--        4、    @click=\"deleteHandler()\"：点击按钮时，会触发 deleteHandler 方法。\r\n如何区分批量删除还是单个删除？通过传入的id进行区分：批量删除触发deleteHandler方法没有传参deleteHandler()，而删除触发deleteHandler方法时传参deleteHandler(scope.row.id)\r\n            ids：若传入了 id 参数，则只删除该条数据；若未传入 id 参数，则删除用户选中的所有数据项。-->\r\n            <el-button\r\n                :disabled=\"dataListSelections.length <= 0\"\r\n                type=\"danger\"\r\n                icon=\"el-icon-delete\"\r\n                @click=\"deleteHandler()\"\r\n            >删除</el-button>\r\n          </el-form-item>\r\n        </el-row>\r\n      </el-form>\r\n      <!-- 表格内容容器 -->\r\n      <div class=\"table-content\">\r\n        <!-- Element UI 的表格组件，绑定表格数据，设置加载状态，监听选择项变化事件 -->\r\n<!--    2、    @selection-change=\"selectionChangeHandler\"：当用户勾选或取消勾选复选框时，会触发 selectionChangeHandler 方法。\r\n        selectionChangeHandler 方法用于获取用户选中的数据项，\r\n        其中val：此参数是一个数组，包含了用户选中的数据项。\r\n        this.dataListSelections：将选中的数据项赋值给 dataListSelections，后续使用\r\n\r\n        参数解释：\r\n        stripe为 true 时（在 Vue 中，省略属性值默认表示 true），表格会显示斑马线效果，即奇数行和偶数行使用不同的背景色，这样能增强表格的可读性。\r\n        border为 true 时，表格会显示边框，使表格的结构更加清晰。\r\n        fit为 true 时，表格的列宽会自动调整以适应表格的宽度，确保表格能够完整显示在容器内。\r\n        size设置表格的尺寸大小。Element UI 提供了多种尺寸选项，如 mini、small、medium、large 等，这里设置为 medium 表示使用中等尺寸的表格。-->\r\n        <el-table\r\n            class=\"tables\"\r\n            :data=\"dataList\"\r\n            v-loading=\"dataListLoading\"\r\n            @selection-change=\"selectionChangeHandler\"\r\n            stripe\r\n            border\r\n            fit\r\n            size=\"medium\">\r\n          <!-- 表格选择列，使用了 Element UI 框架中的 <el-table-column> 组件，用于在 <el-table> 里定义一个表格列。\r\n          根据 contents.tableSelection 的值决定是否显示 -->\r\n<!--      1、    type=\"selection\"：此属性表明该列是选择列，用户能够通过勾选复选框来选中数据项。-->\r\n\r\n<!--          参数解释：\r\n          header-align=\"center\"设置该列的表头文本的水平对齐方式为居中对齐\r\n          align=\"center\"设置该列单元格内容的水平对齐方式为居中对齐\r\n          width=\"50\"设置该列的宽度为 50 像素\r\n          -->\r\n          <el-table-column\r\n              v-if=\"contents.tableSelection\"\r\n              type=\"selection\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              width=\"50\">\r\n          </el-table-column>\r\n\r\n          <!-- 名称列，显示数据的名称字段 -->\r\n<!--          参数解释\r\n          prop=\"name\"该属性指定了表格列要显示的数据字段，每一行数据对象的 name 属性值会被显示在该列对应的单元格中。\r\n          如果 dataList 是绑定到 el-table 的数据，dataList 中的每个元素的 name 属性值就会在该列显示\r\n          :show-overflow-tooltip=\"true\"这是一个动态绑定的属性，当设置为 true 时，如果单元格内的内容过长，超出了单元格的宽度，\r\n          会以 tooltip（工具提示）的形式显示完整内容。当鼠标悬停在单元格上时，会弹出一个提示框显示完整的文本。-->\r\n          <el-table-column\r\n              prop=\"name\"\r\n              label=\"名称\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              :show-overflow-tooltip=\"true\">\r\n            <!-- 自定义单元格内容，显示当前行的名称 -->\r\n            <template slot-scope=\"scope\">\r\n              <span>{{scope.row.name}}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 图片列，显示数据的图片字段 -->\r\n          <el-table-column\r\n              prop=\"value\"\r\n              label=\"图片\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              width=\"200\"\r\n          >\r\n            <!-- 自定义单元格内容，根据图片字段的值显示图片或提示信息 -->\r\n            <template slot-scope=\"scope\">\r\n              <div v-if=\"scope.row.value\">\r\n                <!-- 拼接图片的完整 URL 并显示 -->\r\n                <img :src=\"$base.url+scope.row.value.split(',')[0]\" width=\"100\" height=\"100\">\r\n              </div>\r\n              <div v-else>无图片</div>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 操作列，固定在表格右侧 -->\r\n          <el-table-column\r\n              label=\"操作\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              width=\"300\"\r\n              fixed=\"right\">\r\n            <!-- 自定义单元格内容，包含详情、修改、删除按钮 -->\r\n            <template slot-scope=\"scope\">\r\n              <!-- 详情按钮，点击调用 addOrUpdateHandler 方法并传递当前行的 ID 和 'info' 参数 -->\r\n              <el-button\r\n                  type=\"success\"\r\n                  size=\"mini\"\r\n                  @click=\"addOrUpdateHandler(scope.row.id,'info')\">\r\n                <i class=\"el-icon-tickets\"></i>详情\r\n              </el-button>\r\n              <!-- 修改按钮，点击调用 addOrUpdateHandler 方法并传递当前行的 ID -->\r\n              <el-button\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                  @click=\"addOrUpdateHandler(scope.row.id)\">\r\n                <i class=\"el-icon-edit\"></i>修改\r\n              </el-button>\r\n              <!-- 删除按钮，点击调用 deleteHandler 方法并传递当前行的 ID -->\r\n              <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  @click=\"deleteHandler(scope.row.id)\">\r\n                <i class=\"el-icon-delete\"></i>删除\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- 分页组件，监听每页数量变化和当前页码变化事件 -->\r\n        <el-pagination\r\n            class=\"pagination-content\"\r\n            @size-change=\"sizeChangeHandle\"\r\n            @current-change=\"currentChangeHandle\"\r\n            :current-page=\"pageIndex\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"Number(contents.pageEachNum)\"\r\n            :total=\"totalPage\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            background>\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n    <!-- 添加/修改页面，根据 addOrUpdateFlag 的值决定是否显示，传递父组件实例并设置引用 -->\r\n    <add-or-update v-if=\"addOrUpdateFlag\" :parent=\"this\" ref=\"addOrUpdate\"></add-or-update>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入添加/修改组件\r\nimport AddOrUpdate from \"./add-or-update.vue\";\r\n\r\nexport default {\r\n  // 注册组件\r\n  components: {\r\n    AddOrUpdate,\r\n  },\r\n  // 组件的数据\r\n  data() {\r\n    return {\r\n      // 搜索表单数据\r\n      searchForm: {\r\n        name: \"\"\r\n      },\r\n      // 表格数据列表\r\n      dataList: [],\r\n      // 当前页码\r\n      pageIndex: 1,\r\n      // 每页显示数量\r\n      pageSize: 10,\r\n      // 总记录数\r\n      totalPage: 0,\r\n      // 表格数据加载状态\r\n      dataListLoading: false,\r\n      // 选中的数据项列表\r\n      dataListSelections: [],\r\n      // 是否显示列表页的标志\r\n      showFlag: true,\r\n      // 是否显示添加/修改页面的标志\r\n      addOrUpdateFlag: false,\r\n      // 表格配置项\r\n      contents: {\r\n        // 是否显示表格选择列\r\n        tableSelection: true,\r\n        // 是否显示表格索引列\r\n        tableIndex: true,\r\n        // 每页显示数量\r\n        pageEachNum: 10\r\n      }\r\n    };\r\n  },\r\n  // 组件创建完成后调用的钩子函数，获取数据列表\r\n  created() {\r\n    this.getDataList();\r\n  },\r\n  // 组件的方法\r\n  methods: {\r\n    // 获取数据列表的方法\r\n    getDataList() {\r\n      // 设置表格数据加载状态为 true\r\n      this.dataListLoading = true;\r\n      // 定义请求参数\r\n      let params = {\r\n        // 当前页码\r\n        page: this.pageIndex,\r\n        // 每页显示数量\r\n        limit: this.pageSize,\r\n        // 排序字段\r\n        sort: 'id',\r\n      };\r\n\r\n      // 如果搜索表单中的名称字段有值，添加到请求参数中\r\n      //有值代表用户在搜索框输入了文字，在 params 对象中添加一个 name 属性，并把它的值设置为包含搜索关键字的模糊查询字符串\r\n      //% 位于输入的文字前面，意味着搜索结果里该文字可以出现在任意位置。\r\n      //% 位于输入的文字后面，意味着搜索结果里该文字后面可以有任意字符。\r\n      if(this.searchForm.name) {\r\n        params['name'] = '%' + this.searchForm.name + '%';\r\n      }\r\n\r\n      // 发送 HTTP 请求获取数据列表\r\n      //params 对象会作为查询参数通过 this.$http 发送到后端的 config/page 接口。\r\n      // 后端服务器接收到这些参数后，会依据 name 参数进行模糊查询，找出所有名称包含用户输入关键字的记录，再把查询结果返回给前端。\r\n      this.$http({\r\n        url: \"config/page\",\r\n        method: \"get\",\r\n        params: params\r\n      }).then(({ data }) => {\r\n        // 如果响应数据存在且状态码为 0\r\n        if (data && data.code === 0) {\r\n          // 更新表格数据列表\r\n          this.dataList = data.data.list;\r\n          // 更新总记录数\r\n          this.totalPage = data.data.total;\r\n        } else {\r\n          // 清空表格数据列表\r\n          this.dataList = [];\r\n          // 总记录数设为 0\r\n          this.totalPage = 0;\r\n        }\r\n        // 设置表格数据加载状态为 false\r\n        this.dataListLoading = false;\r\n      });\r\n    },\r\n\r\n    // 每页数量变化时的处理方法\r\n    sizeChangeHandle(val) {\r\n      // 更新每页显示数量\r\n      this.pageSize = val;\r\n      // 当前页码重置为 1\r\n      this.pageIndex = 1;\r\n      // 重新获取数据列表\r\n      this.getDataList();\r\n    },\r\n\r\n    // 当前页码变化时的处理方法\r\n    currentChangeHandle(val) {\r\n      // 更新当前页码\r\n      this.pageIndex = val;\r\n      // 重新获取数据列表\r\n      this.getDataList();\r\n    },\r\n\r\n    // 表格选择项变化时的处理方法\r\n    selectionChangeHandler(val) {\r\n      // 更新选中的数据项列表\r\n      this.dataListSelections = val;\r\n    },\r\n\r\n    // 添加/修改的处理方法\r\n    addOrUpdateHandler(id, type) {\r\n      // 隐藏列表页\r\n      this.showFlag = false;\r\n      // 显示添加/修改页面\r\n      this.addOrUpdateFlag = true;\r\n      // 在下一次 DOM 更新循环结束之后执行延迟回调\r\n      this.$nextTick(() => {\r\n        // 调用添加/修改组件的 init 方法进行初始化\r\n        this.$refs.addOrUpdate.init(id, type || 'else');\r\n      });\r\n    },\r\n\r\n    // 删除的处理方法\r\n    deleteHandler(id) {\r\n      // 获取要删除的 ID 列表\r\n      var ids = id\r\n          ? [Number(id)]\r\n          : this.dataListSelections.map(item => {\r\n            return Number(item.id);\r\n          });\r\n\r\n      // 弹出确认框，确认是否进行删除操作\r\n      this.$confirm(`确定进行[${id ? \"删除\" : \"批量删除\"}]操作?`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        // 发送 HTTP 请求进行删除操作\r\n        this.$http({\r\n          url: \"config/delete\",\r\n          method: \"post\",\r\n          data: ids\r\n        }).then(({ data }) => {\r\n          // 如果响应数据存在且状态码为 0\r\n          if (data && data.code === 0) {\r\n            // 显示成功提示信息，提示信息消失后重新获取数据列表\r\n            this.$message({\r\n              message: \"操作成功\",\r\n              type: \"success\",\r\n              duration: 1500,\r\n              onClose: () => {\r\n                this.getDataList();\r\n              }\r\n            });\r\n          } else {\r\n            // 显示错误提示信息\r\n            this.$message.error(data.msg);\r\n          }\r\n        });\r\n      });\r\n    },\r\n\r\n    // 搜索的处理方法\r\n    search() {\r\n      // 当前页码重置为 1\r\n      this.pageIndex = 1;\r\n      // 重新获取数据列表\r\n      this.getDataList();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 主内容容器样式 */\r\n.main-content {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  min-height: calc(100vh - 84px);\r\n}\r\n\r\n/* 表单内容样式 */\r\n.form-content {\r\n  padding: 20px;\r\n  background-color: #FFFDF1;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.1);\r\n  border-radius: 6px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 表单行样式 */\r\n.ad {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n\r\n/* 表格内容样式 */\r\n.table-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* 表格样式 */\r\n.tables {\r\n  width: 100%;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 表格表头样式 */\r\n.tables >>> .el-table__header th {\r\n  background-color: var(--publicSubColor);\r\n  color: #fff !important;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 表格奇数行样式 */\r\n.tables >>> .el-table__body tr:nth-child(odd) {\r\n  background-color: rgba(184, 230, 253, 0.78);\r\n}\r\n\r\n/* 表格行悬停样式 */\r\n.tables >>> .el-table__body tr:hover td {\r\n  background-color: var(--publicSubColor) !important;\r\n  color: #333 !important;\r\n}\r\n\r\n/* 表格单元格样式 */\r\n.tables >>> .el-table__body td {\r\n  padding: 8px 0;\r\n}\r\n\r\n/* 成功按钮样式 */\r\n.el-button--success {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n  height: 32px;\r\n  font-size: 14px;\r\n  border-width: 1px;\r\n}\r\n\r\n/* 主要按钮样式 */\r\n.el-button--primary {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n  height: 32px;\r\n  font-size: 14px;\r\n  border-width: 1px;\r\n}\r\n\r\n/* 危险按钮样式 */\r\n.el-button--danger {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n  height: 32px;\r\n  font-size: 14px;\r\n  border-width: 1px;\r\n}\r\n\r\n/* 按钮通用样式 */\r\n.el-button {\r\n  margin: 0 5px;\r\n  padding: 7px 12px;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination-content {\r\n  margin-top: 15px;\r\n  padding: 10px 0;\r\n  text-align: right;\r\n}\r\n\r\n</style>"]}]}