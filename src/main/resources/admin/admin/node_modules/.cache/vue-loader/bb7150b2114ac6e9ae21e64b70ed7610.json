{"remainingRequest":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\dictionaryJiadian\\add-or-update.vue?vue&type=style&index=0&id=6dbc6349&prod&scoped=true&lang=css","dependencies":[{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\dictionaryJiadian\\add-or-update.vue","mtime":1745921392284},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1743781065361},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1743781065757},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1743781065333},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743781066581},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1743781065439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiDlrrnlmajmoLflvI8gKi8NCi5hZGQtZWRpdC1jb250YWluZXIgew0KICBwYWRkaW5nOiAyMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICBib3JkZXItcmFkaXVzOiA2cHg7DQogIGJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgwLDAsMCwwLjEpOw0KfQ0KDQovKiDooajljZXlhoXlrrnljLrln58gKi8NCi5mb3JtLWNvbnRlbnQgew0KICBwYWRkaW5nOiAyMHB4Ow0KfQ0KDQovKiDooajljZXooYzpl7Tot50gKi8NCi5lbC1mb3JtLWl0ZW0gew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQovKiDmjInpkq7ljLrln58gKi8NCi5mb3JtLWFjdGlvbnMgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIG1hcmdpbi10b3A6IDMwcHg7DQp9DQoNCi8qIOaMiemSruagt+W8jyAqLw0KLmVsLWJ1dHRvbiB7DQogIG1hcmdpbjogMCAxMHB4Ow0KICBwYWRkaW5nOiAxMHB4IDIwcHg7DQp9DQoNCi8qIOS4u+imgeaMiemSruagt+W8jyAqLw0KLmVsLWJ1dHRvbi0tcHJpbWFyeSB7DQogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXB1YmxpY1N1YkNvbG9yKTsNCiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1wdWJsaWNNYWluQ29sb3IpOw0KICBjb2xvcjogIzMzMzsNCn0NCg0KLyog6L6T5YWl5qGG5qC35byPICovDQouZWwtaW5wdXRfX2lubmVyIHsNCiAgaGVpZ2h0OiAzNnB4Ow0KICBsaW5lLWhlaWdodDogMzZweDsNCn0NCg0KLyog5Y+q6K+76L6T5YWl5qGG5qC35byPICovDQouZWwtaW5wdXQuaXMtZGlzYWJsZWQgLmVsLWlucHV0X19pbm5lciB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7DQogIGJvcmRlci1jb2xvcjogI2U0ZTdlZDsNCiAgY29sb3I6ICNjMGM0Y2M7DQp9DQo="},{"version":3,"sources":["add-or-update.vue"],"names":[],"mappings":";AAmNA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"add-or-update.vue","sourceRoot":"src/views/modules/dictionaryJiadian","sourcesContent":["<template>\r\n  <div class=\"add-edit-container\">\r\n    <!-- 表单区域 -->\r\n    <el-form\r\n        class=\"form-content\"\r\n        ref=\"ruleForm\"\r\n        :model=\"ruleForm\"\r\n        :rules=\"rules\"\r\n        label-width=\"auto\"\r\n    >\r\n      <el-row :gutter=\"20\">\r\n        <!-- 商品类型编码字段 -->\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"商品类型编码\" prop=\"codeIndex\">\r\n            <el-input\r\n                v-model=\"ruleForm.codeIndex\"\r\n                placeholder=\"商品类型编码\"\r\n                :readonly=\"type==='info' || ro.codeIndex\"\r\n                clearable\r\n            ></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <!-- 商品类型名称字段 -->\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"商品类型\" prop=\"indexName\">\r\n            <el-input\r\n                v-model=\"ruleForm.indexName\"\r\n                placeholder=\"商品类型\"\r\n                :readonly=\"type==='info' || ro.indexName\"\r\n                clearable\r\n            ></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 按钮区域 -->\r\n      <el-form-item class=\"form-actions\">\r\n        <el-button\r\n            v-if=\"type!=='info'\"\r\n            type=\"primary\"\r\n            @click=\"onSubmit\"\r\n        >提交</el-button>\r\n        <el-button @click=\"back\">{{ type==='info' ? '返回' : '取消' }}</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // 接收父组件传递的props\r\n  props: [\"parent\"],\r\n\r\n  data() {\r\n    return {\r\n      id: '',          // 当前操作项的ID（新增时为undefined）\r\n      type: '',        // 操作类型：'info'表示查看详情，'else'表示编辑/添加\r\n\r\n      // 控制表单字段的只读状态\r\n      ro: {\r\n        codeIndex: true,   // 商品类型编码字段只读（防止修改）\r\n        indexName: false,  // 商品类型名称字段可编辑\r\n      },\r\n\r\n      // 表单数据对象\r\n      ruleForm: {\r\n        codeIndex: '',     // 商品类型编码（自动生成）\r\n        indexName: '',     // 商品类型名称（用户输入）\r\n        superId: '',       // 上级ID（预留字段）\r\n        beizhu: '',        // 备注信息（预留字段）\r\n      },\r\n\r\n      // 表单验证规则\r\n      rules: {\r\n        indexName: [\r\n          // 必填校验：商品类型名称不能为空，触发时机为失去焦点时\r\n          { required: true, message: '商品类型不能为空', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 初始化表单方法（核心方法）\r\n     * @param {string|number} id - 记录ID（新增时可不传或传undefined）\r\n     * @param {string} [type='else'] - 操作类型，默认'else'表示编辑/新增\r\n     */\r\n    init(id, type = 'else') {\r\n      // 1. 初始化组件状态\r\n      this.id = id || undefined;  // 明确处理id为undefined的情况\r\n      this.type = type;           // 设置操作类型（默认'else'）\r\n\r\n      // 2. 清空表单数据（避免数据残留）\r\n      this.ruleForm = {\r\n        codeIndex: '',\r\n        indexName: '',\r\n        superId: '',\r\n        beizhu: ''\r\n      };\r\n\r\n      // 3. 根据操作类型执行不同逻辑\r\n      if (this.id && (this.type === 'info' || this.type === 'else')) {\r\n        // 情况1：有ID且是查看/编辑操作 -> 获取详情数据\r\n        this.getInfo(this.id);\r\n      } else {\r\n        // 情况2：新增操作 -> 获取最大编码值\r\n        this.getMaxCode();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 获取最大编码值（用于新增时自动生成编码）\r\n     */\r\n    getMaxCode() {\r\n      this.$http({\r\n        url: `dictionary/maxCodeIndex`,  // 后端接口地址\r\n        method: \"post\",\r\n        data: { dicCode: \"jiadian_types\" }  // 传递字典类型标识\r\n      }).then(({ data }) => {\r\n        if (data && data.code === 0) {\r\n          // 成功获取最大编码，更新表单字段\r\n          this.ruleForm.codeIndex = data.maxCodeIndex;\r\n        } else {\r\n          // 接口返回错误信息\r\n          this.$message.error(data.msg);\r\n        }\r\n      }).catch(error => {\r\n        // 网络请求失败处理\r\n        console.error(\"获取最大编码失败:\", error);\r\n        this.$message.error(\"获取编码失败，请重试\");\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 获取详情数据（用于查看/编辑）\r\n     * @param {string|number} id - 要查询的记录ID\r\n     */\r\n    getInfo(id) {\r\n      this.$http({\r\n        url: `dictionary/info/${id}`,  // RESTful风格接口\r\n        method: \"get\"\r\n      }).then(({ data }) => {\r\n        if (data && data.code === 0) {\r\n          // 成功获取数据，填充表单\r\n          this.ruleForm = data.data;\r\n        } else {\r\n          // 接口返回错误信息\r\n          this.$message.error(data.msg);\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 表单提交方法\r\n     */\r\n    onSubmit() {\r\n      // 先进行表单验证\r\n      this.$refs[\"ruleForm\"].validate(valid => {\r\n        if (valid) {\r\n          // 表单验证通过，准备提交数据\r\n          const formData = {\r\n            ...this.ruleForm,              // 展开表单数据\r\n            dicCode: \"jiadian_types\",      // 固定字典编码\r\n            dicName: \"商品类型\"            // 固定字典名称\r\n          };\r\n\r\n          // 动态判断是更新还是新增\r\n          const url = this.ruleForm.id ? \"dictionary/update\" : \"dictionary/save\";\r\n\r\n          // 发送请求\r\n          this.$http({\r\n            url: url,\r\n            method: \"post\",\r\n            data: formData\r\n          }).then(({ data }) => {\r\n            if (data && data.code === 0) {\r\n              // 操作成功提示\r\n              this.$message({\r\n                message: \"操作成功\",\r\n                type: \"success\",\r\n                duration: 1500,  // 1.5秒后自动关闭\r\n                onClose: () => {\r\n                  this.back();   // 提示关闭后返回列表页\r\n                }\r\n              });\r\n            } else {\r\n              // 操作失败提示\r\n              this.$message.error(data.msg);\r\n            }\r\n          });\r\n        }\r\n        // 表单验证失败时自动阻止提交（ElementUI内部处理）\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 返回列表页方法\r\n     */\r\n    back() {\r\n      // 通过parent引用操作父组件\r\n      this.parent.showFlag = true;          // 显示列表组件\r\n      this.parent.addOrUpdateFlag = false;  // 隐藏表单组件\r\n      this.parent.search();                 // 刷新列表数据\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 容器样式 */\r\n.add-edit-container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* 表单内容区域 */\r\n.form-content {\r\n  padding: 20px;\r\n}\r\n\r\n/* 表单行间距 */\r\n.el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮区域 */\r\n.form-actions {\r\n  text-align: center;\r\n  margin-top: 30px;\r\n}\r\n\r\n/* 按钮样式 */\r\n.el-button {\r\n  margin: 0 10px;\r\n  padding: 10px 20px;\r\n}\r\n\r\n/* 主要按钮样式 */\r\n.el-button--primary {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n}\r\n\r\n/* 输入框样式 */\r\n.el-input__inner {\r\n  height: 36px;\r\n  line-height: 36px;\r\n}\r\n\r\n/* 只读输入框样式 */\r\n.el-input.is-disabled .el-input__inner {\r\n  background-color: #f5f7fa;\r\n  border-color: #e4e7ed;\r\n  color: #c0c4cc;\r\n}\r\n</style>"]}]}