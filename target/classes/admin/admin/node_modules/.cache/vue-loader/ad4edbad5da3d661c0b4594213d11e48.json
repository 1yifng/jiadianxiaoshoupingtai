{"remainingRequest":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\config\\add-or-update.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\config\\add-or-update.vue","mtime":1746193526073},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1743781066696},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743781066581},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1743781065439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgLy8g5a6a5LmJ57uE5Lu255qE5pWw5o2uDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGlkOiAnJywgLy8g5a2Y5YKo5pWw5o2u55qEIElEDQogICAgICB0eXBlOiAnJywgLy8g5a2Y5YKo5pON5L2c57G75Z6LDQogICAgICBybzogew0KICAgICAgICBuYW1lOiBmYWxzZSwgLy8g5o6n5Yi25ZCN56ew6L6T5YWl5qGG5piv5ZCm5Y+q6K+7DQogICAgICAgIHZhbHVlOiBmYWxzZSwgLy8g5o6n5Yi25Zu+54mH5LiK5Lyg5piv5ZCm5Y+v55SoDQogICAgICB9LA0KICAgICAgcnVsZUZvcm06IHsNCiAgICAgICAgbmFtZTogJycsIC8vIOWtmOWCqOWQjeensOi+k+WFpeahhueahOWAvA0KICAgICAgICB2YWx1ZTogJycsIC8vIOWtmOWCqOS4iuS8oOWbvueJh+eahCBVUkwNCiAgICAgIH0sDQogICAgICBydWxlczogew0KICAgICAgICBuYW1lOiBbDQogICAgICAgICAgLy8g5ZCN56ew5a2X5q616aqM6K+B6KeE5YiZ77yM5LiN6IO95Li656m6DQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9LA0KICAgICAgICBdLA0KICAgICAgICB2YWx1ZTogW10sIC8vIOWbvueJh+Wtl+auteeahOmqjOivgeinhOWIme+8jOi/memHjOS4uuepug0KICAgICAgfQ0KICAgIH07DQogIH0sDQogIC8vIOaOpeaUtueItue7hOS7tuS8oOmAkueahOWxnuaApw0KICBwcm9wczogWyJwYXJlbnQiXSwNCiAgLy8g5a6a5LmJ57uE5Lu255qE5pa55rOVDQogIG1ldGhvZHM6IHsNCiAgICAvLyDliJ3lp4vljJbmlrnms5XvvIzmoLnmja4gaWQg5ZKMIHR5cGUg6L+b6KGM5LiN5ZCM55qE5pON5L2cDQogICAgaW5pdChpZCwgdHlwZSkgew0KICAgICAgaWYgKGlkKSB7DQogICAgICAgIHRoaXMuaWQgPSBpZDsNCiAgICAgICAgdGhpcy50eXBlID0gdHlwZTsNCiAgICAgIH0NCiAgICAgIC8vIOW9kyB0eXBlIOS4uiAnaW5mbycg5oiWICdlbHNlJyDml7bvvIzosIPnlKggaW5mbyDmlrnms5Xojrflj5bor6bmg4UNCiAgICAgIGlmKHRoaXMudHlwZT09J2luZm8nIHx8IHRoaXMudHlwZT09J2Vsc2UnKXsNCiAgICAgICAgdGhpcy5pbmZvKGlkKTsNCiAgICAgIH0NCiAgICAgIC8vIOW9kyB0eXBlIOS4uiAnY3Jvc3MnIOaXtu+8jOS7juacrOWcsOWtmOWCqOS4reiOt+WPluaVsOaNrg0KICAgICAgZWxzZSBpZih0aGlzLnR5cGU9PSdjcm9zcycpew0KICAgICAgICB2YXIgb2JqID0gdGhpcy4kc3RvcmFnZS5nZXRPYmooJ2Nyb3NzT2JqJyk7DQogICAgICAgIGZvciAodmFyIG8gaW4gb2JqKXsNCiAgICAgICAgICBpZihvPT0nbmFtZScpew0KICAgICAgICAgICAgdGhpcy5ydWxlRm9ybS5uYW1lID0gb2JqW29dOw0KICAgICAgICAgICAgdGhpcy5yby5uYW1lID0gdHJ1ZTsgLy8g6K6+572u5ZCN56ew6L6T5YWl5qGG5Li65Y+q6K+7DQogICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICB9DQogICAgICAgICAgaWYobz09J3ZhbHVlJyl7DQogICAgICAgICAgICB0aGlzLnJ1bGVGb3JtLnZhbHVlID0gb2JqW29dOw0KICAgICAgICAgICAgdGhpcy5yby52YWx1ZSA9IHRydWU7IC8vIOiuvue9ruWbvueJh+S4iuS8oOS4jeWPr+eUqA0KICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICAvLyDojrflj5bor6bmg4XnmoTmlrnms5UNCiAgICBpbmZvKGlkKSB7DQogICAgICAvLyDlj5HpgIEgSFRUUCDor7fmsYLojrflj5bmlbDmja7or6bmg4UNCiAgICAgIHRoaXMuJGh0dHAoew0KICAgICAgICB1cmw6IGBjb25maWcvaW5mby8ke2lkfWAsDQogICAgICAgIG1ldGhvZDogImdldCINCiAgICAgIH0pLnRoZW4oKHsgZGF0YSB9KSA9PiB7DQogICAgICAgIGlmIChkYXRhICYmIGRhdGEuY29kZSA9PT0gMCkgew0KICAgICAgICAgIHRoaXMucnVsZUZvcm0gPSBkYXRhLmRhdGE7IC8vIOWwhuiOt+WPlueahOaVsOaNrui1i+WAvOe7mSBydWxlRm9ybQ0KICAgICAgICAgIGxldCByZWcgPSBuZXcgUmVnRXhwKCcuLi8uLi8uLi91cGxvYWQnLCdnJyk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihkYXRhLm1zZyk7IC8vIOaYvuekuumUmeivr+a2iOaBrw0KICAgICAgICB9DQogICAgICB9KTsNCiAgICB9LA0KICAgIC8vIOaPkOS6pOihqOWNleeahOaWueazlQ0KICAgIG9uU3VibWl0KCkgew0KICAgICAgLy8g6aqM6K+B6KGo5Y2V5pWw5o2uDQogICAgICB0aGlzLiRyZWZzWyJydWxlRm9ybSJdLnZhbGlkYXRlKHZhbGlkID0+IHsNCiAgICAgICAgaWYgKHZhbGlkKSB7DQogICAgICAgICAgLy8g5Y+R6YCBIEhUVFAg6K+35rGC5L+d5a2Y5oiW5pu05paw5pWw5o2uDQogICAgICAgICAgdGhpcy4kaHR0cCh7DQogICAgICAgICAgICB1cmw6IGBjb25maWcvJHshdGhpcy5ydWxlRm9ybS5pZCA/ICJzYXZlIiA6ICJ1cGRhdGUifWAsDQogICAgICAgICAgICBtZXRob2Q6ICJwb3N0IiwNCiAgICAgICAgICAgIGRhdGE6IHRoaXMucnVsZUZvcm0NCiAgICAgICAgICB9KS50aGVuKCh7IGRhdGEgfSkgPT4gew0KICAgICAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5jb2RlID09PSAwKSB7DQogICAgICAgICAgICAgIC8vIOaYvuekuuaIkOWKn+a2iOaBr++8jOW5tuWcqOa2iOaBr+WFs+mXreWQjuaJp+ihjOS4gOS6m+aTjeS9nA0KICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAi5pON5L2c5oiQ5YqfIiwNCiAgICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsDQogICAgICAgICAgICAgICAgZHVyYXRpb246IDE1MDAsDQogICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gew0KICAgICAgICAgICAgICAgICAgdGhpcy5wYXJlbnQuc2hvd0ZsYWcgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgdGhpcy5wYXJlbnQuYWRkT3JVcGRhdGVGbGFnID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICB0aGlzLnBhcmVudC5zZWFyY2goKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihkYXRhLm1zZyk7IC8vIOaYvuekuumUmeivr+a2iOaBrw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgICB9KTsNCiAgICB9LA0KICAgIC8vIOi/lOWbnueahOaWueazlQ0KICAgIGJhY2soKSB7DQogICAgICB0aGlzLnBhcmVudC5zaG93RmxhZyA9IHRydWU7DQogICAgICB0aGlzLnBhcmVudC5hZGRPclVwZGF0ZUZsYWcgPSBmYWxzZTsNCiAgICB9LA0KICAgIC8vIOWbvueJh+S4iuS8oOWbnuiwg+aWueazlQ0KICAgIHZhbHVlVXBsb2FkQ2hhbmdlKGZpbGVVcmxzKSB7DQogICAgICB0aGlzLnJ1bGVGb3JtLnZhbHVlID0gZmlsZVVybHM7IC8vIOabtOaWsOS4iuS8oOWbvueJh+eahCBVUkwNCiAgICB9LA0KICB9DQp9Ow0K"},{"version":3,"sources":["add-or-update.vue"],"names":[],"mappingsfile":"add-or-update.vue","sourceRoot":"src/views/modules/config","sourcesContent":["<template>\r\n  <!-- 定义一个包含表单的容器块 -->\r\n  <div class=\"addEdit-block\">\r\n    <!-- 使用 Element UI 的表单组件 -->\r\n    <el-form\r\n        class=\"detail-form-content\"\r\n        ref=\"ruleForm\"\r\n        :model=\"ruleForm\"\r\n        :rules=\"rules\"\r\n        label-width=\"80px\"\r\n    >\r\n      <!-- 使用 Element UI 的行组件 -->\r\n      <el-row>\r\n        <!-- 使用 Element UI 的列组件，占据 12 列 -->\r\n        <el-col :span=\"12\">\r\n          <!-- 当 type 不等于 'info' 时显示此表单项 -->\r\n          <el-form-item class=\"input\" v-if=\"type!='info'\" label=\"名称\" prop=\"name\">\r\n            <!-- 绑定输入框的值到 ruleForm.name，设置占位符和清空按钮 -->\r\n            <el-input v-model=\"ruleForm.name\"\r\n                      placeholder=\"名称\" clearable :readonly=\"ro.name\"></el-input>\r\n          </el-form-item>\r\n          <!-- 当 type 等于 'info' 时显示此表单项 -->\r\n          <el-form-item v-else class=\"input\" label=\"名称\" prop=\"name\">\r\n            <!-- 绑定输入框的值到 ruleForm.name，设置为只读 -->\r\n            <el-input v-model=\"ruleForm.name\"\r\n                      placeholder=\"名称\" readonly></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n        <!-- 使用 Element UI 的列组件，占据 24 列 -->\r\n        <el-col :span=\"24\">\r\n          <!-- 当 type 不等于 'info' 且 ro.value 为 false 时显示此表单项 -->\r\n          <el-form-item class=\"upload\" v-if=\"type!='info' && !ro.value\" label=\"轮播图片\" prop=\"value\">\r\n            <!-- 自定义的文件上传组件 -->\r\n            <!--tip=\"点击上传图片\"   上传提示文字 -->\r\n            <!--action=\"file/upload\"    上传接口地址 -->\r\n            <!--:limit=\"1\"              最多上传1个文件 -->\r\n            <!--:multiple=\"false\"       不允许多文件上传 -->\r\n            <!--:fileUrls=\"ruleForm.value?$base.url+ruleForm.value:''\"   已上传文件的URL -->\r\n            <!--@change=\"valueUploadChange\"   上传状态改变的回调 -->\r\n            <file-upload\r\n                tip=\"点击上传图片\"\r\n                action=\"file/upload\"\r\n                :limit=\"1\"\r\n                :multiple=\"false\"\r\n                :fileUrls=\"ruleForm.value?$base.url+ruleForm.value:''\"\r\n                @change=\"valueUploadChange\"\r\n            ></file-upload>\r\n          </el-form-item>\r\n          <!-- 当 ruleForm.value 存在时显示此表单项 -->\r\n          <el-form-item v-else-if=\"ruleForm.value\" label=\"轮播图片\" prop=\"value\">\r\n            <!-- 循环显示上传的图片 -->\r\n            <img\r\n                style=\"margin-right:20px;\"\r\n                v-for=\"(item,index) in ruleForm.value.split(',')\"\r\n                :key=\"index\"\r\n                :src=\"$base.url+item\"\r\n                width=\"100\"\r\n                height=\"100\">\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表单按钮区域 -->\r\n      <el-form-item class=\"btn\">\r\n        <!-- 当 type 不等于 'info' 时显示提交按钮 -->\r\n        <el-button v-if=\"type!='info'\" type=\"primary\" @click=\"onSubmit\">提交</el-button>\r\n        <!-- 根据 type 的值显示不同的按钮文本 -->\r\n        <el-button @click=\"back()\">{{type=='info'?'返回':'取消'}}</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  // 定义组件的数据\r\n  data() {\r\n    return {\r\n      id: '', // 存储数据的 ID\r\n      type: '', // 存储操作类型\r\n      ro: {\r\n        name: false, // 控制名称输入框是否只读\r\n        value: false, // 控制图片上传是否可用\r\n      },\r\n      ruleForm: {\r\n        name: '', // 存储名称输入框的值\r\n        value: '', // 存储上传图片的 URL\r\n      },\r\n      rules: {\r\n        name: [\r\n          // 名称字段验证规则，不能为空\r\n          { required: true, message: '名称不能为空', trigger: 'blur' },\r\n        ],\r\n        value: [], // 图片字段的验证规则，这里为空\r\n      }\r\n    };\r\n  },\r\n  // 接收父组件传递的属性\r\n  props: [\"parent\"],\r\n  // 定义组件的方法\r\n  methods: {\r\n    // 初始化方法，根据 id 和 type 进行不同的操作\r\n    init(id, type) {\r\n      if (id) {\r\n        this.id = id;\r\n        this.type = type;\r\n      }\r\n      // 当 type 为 'info' 或 'else' 时，调用 info 方法获取详情\r\n      if(this.type=='info' || this.type=='else'){\r\n        this.info(id);\r\n      }\r\n      // 当 type 为 'cross' 时，从本地存储中获取数据\r\n      else if(this.type=='cross'){\r\n        var obj = this.$storage.getObj('crossObj');\r\n        for (var o in obj){\r\n          if(o=='name'){\r\n            this.ruleForm.name = obj[o];\r\n            this.ro.name = true; // 设置名称输入框为只读\r\n            continue;\r\n          }\r\n          if(o=='value'){\r\n            this.ruleForm.value = obj[o];\r\n            this.ro.value = true; // 设置图片上传不可用\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 获取详情的方法\r\n    info(id) {\r\n      // 发送 HTTP 请求获取数据详情\r\n      this.$http({\r\n        url: `config/info/${id}`,\r\n        method: \"get\"\r\n      }).then(({ data }) => {\r\n        if (data && data.code === 0) {\r\n          this.ruleForm = data.data; // 将获取的数据赋值给 ruleForm\r\n          let reg = new RegExp('../../../upload','g');\r\n        } else {\r\n          this.$message.error(data.msg); // 显示错误消息\r\n        }\r\n      });\r\n    },\r\n    // 提交表单的方法\r\n    onSubmit() {\r\n      // 验证表单数据\r\n      this.$refs[\"ruleForm\"].validate(valid => {\r\n        if (valid) {\r\n          // 发送 HTTP 请求保存或更新数据\r\n          this.$http({\r\n            url: `config/${!this.ruleForm.id ? \"save\" : \"update\"}`,\r\n            method: \"post\",\r\n            data: this.ruleForm\r\n          }).then(({ data }) => {\r\n            if (data && data.code === 0) {\r\n              // 显示成功消息，并在消息关闭后执行一些操作\r\n              this.$message({\r\n                message: \"操作成功\",\r\n                type: \"success\",\r\n                duration: 1500,\r\n                onClose: () => {\r\n                  this.parent.showFlag = true;\r\n                  this.parent.addOrUpdateFlag = false;\r\n                  this.parent.search();\r\n                }\r\n              });\r\n            } else {\r\n              this.$message.error(data.msg); // 显示错误消息\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 返回的方法\r\n    back() {\r\n      this.parent.showFlag = true;\r\n      this.parent.addOrUpdateFlag = false;\r\n    },\r\n    // 图片上传回调方法\r\n    valueUploadChange(fileUrls) {\r\n      this.ruleForm.value = fileUrls; // 更新上传图片的 URL\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 定义表单容器块的样式 */\r\n.addEdit-block {\r\n  padding: 20px;\r\n}\r\n\r\n/* 定义表单内容的样式 */\r\n.detail-form-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* 输入框样式，这里注释掉了，可以根据需要取消注释\r\n.input >>> .el-input__inner {\r\n  height: 36px;\r\n  line-height: 36px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n}\r\n\r\n.input >>> .el-form-item__label {\r\n  color: #606266;\r\n  font-size: 14px;\r\n}*/\r\n\r\n/* 上传组件样式，这里注释掉了，可以根据需要取消注释\r\n.upload >>> .el-upload--picture-card {\r\n  width: 148px;\r\n  height: 148px;\r\n  line-height: 146px;\r\n  border: 1px dashed #DCDFE6;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n}\r\n\r\n.upload >>> .el-upload-list--picture-card .el-upload-list__item {\r\n  width: 148px;\r\n  height: 148px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n}\r\n\r\n.upload >>> .el-upload-list__item-actions {\r\n  line-height: 146px;\r\n}*/\r\n\r\n/* 按钮样式 */\r\n.btn .el-button {\r\n  padding: 10px 20px;\r\n  font-size: 14px;\r\n  border-radius: 10px;\r\n  margin-right: 10px;\r\n}\r\n\r\n/* 主要按钮样式 */\r\n.btn .el-button--primary {\r\n  background-color: var(--publicMainColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #fff;\r\n}\r\n\r\n/* 默认按钮样式 */\r\n.btn .el-button--default {\r\n  background-color: #ecf5ff;\r\n  border-color: var(--publicSubColor);\r\n  color: var(--publicSubColor);\r\n}\r\n\r\n/* 图片预览样式 */\r\n.el-form-item img {\r\n  vertical-align: top;\r\n  border: 1px solid #eee;\r\n  margin-right: 10px;\r\n}\r\n</style>"]}]}