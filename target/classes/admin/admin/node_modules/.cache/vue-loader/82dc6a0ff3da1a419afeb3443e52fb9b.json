{"remainingRequest":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\dictionaryNews\\add-or-update.vue?vue&type=style&index=0&id=d05cbfce&prod&scoped=true&lang=css","dependencies":[{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\dictionaryNews\\add-or-update.vue","mtime":1745945478349},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1743781065361},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1743781065757},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1743781065333},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743781066581},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1743781065439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiDlrrnlmajmoLflvI8gKi8NCi5mb3JtLWNvbnRhaW5lciB7DQogIHBhZGRpbmc6IDIwcHg7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgYm94LXNoYWRvdzogMCAwIDZweCByZ2JhKDAsMCwwLDAuMSk7DQp9DQoNCi8qIOihqOWNleWGheWuueWMuuWfnyAqLw0KLmZvcm0tY29udGVudCB7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoNCi8qIOihqOWNleihjOmXtOi3nSAqLw0KLmVsLWZvcm0taXRlbSB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi8qIOaMiemSruWMuuWfnyAqLw0KLmZvcm0tYWN0aW9ucyB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgbWFyZ2luLXRvcDogMzBweDsNCn0NCg0KLyog5oyJ6ZKu5qC35byPICovDQouZWwtYnV0dG9uIHsNCiAgbWFyZ2luOiAwIDEwcHg7DQogIHBhZGRpbmc6IDEwcHggMjBweDsNCn0NCg0KLyog5Li76KaB5oyJ6ZKu5qC35byPICovDQouZWwtYnV0dG9uLS1wcmltYXJ5IHsNCiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHVibGljU3ViQ29sb3IpOw0KICBib3JkZXItY29sb3I6IHZhcigtLXB1YmxpY01haW5Db2xvcik7DQogIGNvbG9yOiAjMzMzOw0KfQ0KDQovKiDovpPlhaXmoYbmoLflvI8gKi8NCi5lbC1pbnB1dF9faW5uZXIgew0KICBoZWlnaHQ6IDM2cHg7DQogIGxpbmUtaGVpZ2h0OiAzNnB4Ow0KfQ0KDQovKiDlj6ror7vovpPlhaXmoYbmoLflvI8gKi8NCi5lbC1pbnB1dC5pcy1kaXNhYmxlZCAuZWwtaW5wdXRfX2lubmVyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsNCiAgYm9yZGVyLWNvbG9yOiAjZTRlN2VkOw0KICBjb2xvcjogI2MwYzRjYzsNCn0NCg=="},{"version":3,"sources":["add-or-update.vue"],"names":[],"mappings":";AA2NA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"add-or-update.vue","sourceRoot":"src/views/modules/dictionaryNews","sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <!-- 表单区域 -->\r\n    <el-form\r\n        class=\"form-content\"\r\n        ref=\"ruleForm\"\r\n        :model=\"ruleForm\"\r\n        :rules=\"rules\"\r\n        label-width=\"auto\"\r\n    >\r\n      <el-row :gutter=\"20\">\r\n        <!-- 公告类型编码字段 -->\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"公告类型编码\" prop=\"codeIndex\">\r\n            <el-input\r\n                v-model=\"ruleForm.codeIndex\"\r\n                placeholder=\"公告类型编码\"\r\n                :readonly=\"type==='info' || ro.codeIndex\"\r\n                clearable\r\n            ></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <!-- 公告类型名称字段 -->\r\n        <el-col :span=\"12\">\r\n          <el-form-item label=\"公告类型\" prop=\"indexName\">\r\n            <el-input\r\n                v-model=\"ruleForm.indexName\"\r\n                placeholder=\"公告类型\"\r\n                :readonly=\"type==='info' || ro.indexName\"\r\n                clearable\r\n            ></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 按钮区域 -->\r\n      <el-form-item class=\"form-actions\">\r\n        <el-button\r\n            v-if=\"type!=='info'\"\r\n            type=\"primary\"\r\n            @click=\"onSubmit\"\r\n        >提交</el-button>\r\n        <el-button @click=\"back\">{{ type==='info' ? '返回' : '取消' }}</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // 组件接收的props\r\n  props: [\"parent\"], // 接收父组件实例\r\n\r\n  // 组件数据定义\r\n  data() {\r\n    return {\r\n      id: '',          // 当前编辑项的ID，新增时为空\r\n      type: '',        // 操作类型：'info'查看，'else'编辑，空为新增\r\n\r\n      // 字段只读控制对象\r\n      ro: {\r\n        codeIndex: true,   // 公告类型编码字段只读\r\n        indexName: false, // 公告类型名称字段可编辑\r\n      },\r\n\r\n      // 表单数据对象\r\n      ruleForm: {\r\n        codeIndex: '',     // 公告类型编码\r\n        indexName: '',     // 公告类型名称\r\n        superId: '',       // 上级ID（未使用）\r\n        beizhu: '',        // 备注（未使用）\r\n      },\r\n\r\n      // 表单验证规则\r\n      rules: {\r\n        indexName: [\r\n          // 公告类型名称必填验证\r\n          { required: true, message: '公告类型不能为空', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n\r\n  // 组件方法\r\n  methods: {\r\n    /**\r\n     * 初始化方法\r\n     * @param {string|number} id - 记录ID\r\n     * @param {string} type - 操作类型\r\n     */\r\n    init(id, type) {\r\n      // 设置当前ID和操作类型\r\n      this.id = id;\r\n      this.type = type;\r\n\r\n      // 根据操作类型执行不同逻辑\r\n      if (this.type === 'info' || this.type === 'else') {\r\n        this.getInfo(id);  // 查看或编辑时获取详情\r\n      } else {\r\n        this.getMaxCode(); // 新增时获取最大编码\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 获取最大编码值（用于新增时自动生成编码）\r\n     */\r\n    getMaxCode() {\r\n      // 发送请求获取最大编码\r\n      this.$http({\r\n        url: `dictionary/maxCodeIndex`, // 接口地址\r\n        method: \"post\",                // 请求方法\r\n        data: { dicCode: \"news_types\" } // 请求参数\r\n      }).then(({ data }) => {\r\n        // 请求成功处理\r\n        if (data && data.code === 0) {\r\n          // 兼容不同返回格式\r\n          if (data.data && data.data.maxCodeIndex) {\r\n            // 格式1：data.data.maxCodeIndex\r\n            this.ruleForm.codeIndex = data.data.maxCodeIndex;\r\n          } else if (data.maxCodeIndex) {\r\n            // 格式2：data.maxCodeIndex\r\n            this.ruleForm.codeIndex = data.maxCodeIndex;\r\n          } else {\r\n            // 无返回数据时使用默认值\r\n            this.ruleForm.codeIndex = '001';\r\n          }\r\n        } else {\r\n          // 接口返回错误\r\n          this.$message.error(data.msg || '获取最大编码失败');\r\n          this.ruleForm.codeIndex = '001'; // 使用默认值\r\n        }\r\n      }).catch(error => {\r\n        // 请求失败处理\r\n        console.error('获取最大编码出错:', error);\r\n        this.$message.error('获取最大编码失败');\r\n        this.ruleForm.codeIndex = '001'; // 使用默认值\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 获取详情信息\r\n     * @param {string|number} id - 记录ID\r\n     */\r\n    getInfo(id) {\r\n      // 发送请求获取详情\r\n      this.$http({\r\n        url: `dictionary/info/${id}`, // 接口地址\r\n        method: \"get\"                 // 请求方法\r\n      }).then(({ data }) => {\r\n        // 请求成功处理\r\n        if (data && data.code === 0) {\r\n          // 将返回数据赋值给表单\r\n          this.ruleForm = data.data;\r\n        } else {\r\n          // 接口返回错误\r\n          this.$message.error(data.msg);\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 表单提交\r\n     */\r\n    onSubmit() {\r\n      // 表单验证\r\n      this.$refs[\"ruleForm\"].validate(valid => {\r\n        if (valid) {\r\n          // 表单验证通过\r\n          // 准备提交数据\r\n          const formData = {\r\n            ...this.ruleForm,         // 表单数据\r\n            dicCode: \"news_types\",    // 字典编码\r\n            dicName: \"公告类型\"       // 字典名称\r\n          };\r\n\r\n          // 根据是否有ID决定是更新还是新增\r\n          const url = this.ruleForm.id ? \"dictionary/update\" : \"dictionary/save\";\r\n\r\n          // 发送提交请求\r\n          this.$http({\r\n            url: url,       // 接口地址\r\n            method: \"post\", // 请求方法\r\n            data: formData  // 请求数据\r\n          }).then(({ data }) => {\r\n            // 请求成功处理\r\n            if (data && data.code === 0) {\r\n              // 提交成功提示\r\n              this.$message({\r\n                message: \"操作成功\",\r\n                type: \"success\",\r\n                duration: 1500,\r\n                onClose: () => {\r\n                  this.back(); // 提示关闭后返回列表页\r\n                }\r\n              });\r\n            } else {\r\n              // 接口返回错误\r\n              this.$message.error(data.msg);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 返回列表页\r\n     */\r\n    back() {\r\n      // 通过父组件方法控制显示状态\r\n      this.parent.showFlag = true;          // 显示列表页\r\n      this.parent.addOrUpdateFlag = false;  // 隐藏表单页\r\n      this.parent.search();                 // 刷新列表数据\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 容器样式 */\r\n.form-container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* 表单内容区域 */\r\n.form-content {\r\n  padding: 20px;\r\n}\r\n\r\n/* 表单行间距 */\r\n.el-form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮区域 */\r\n.form-actions {\r\n  text-align: center;\r\n  margin-top: 30px;\r\n}\r\n\r\n/* 按钮样式 */\r\n.el-button {\r\n  margin: 0 10px;\r\n  padding: 10px 20px;\r\n}\r\n\r\n/* 主要按钮样式 */\r\n.el-button--primary {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n}\r\n\r\n/* 输入框样式 */\r\n.el-input__inner {\r\n  height: 36px;\r\n  line-height: 36px;\r\n}\r\n\r\n/* 只读输入框样式 */\r\n.el-input.is-disabled .el-input__inner {\r\n  background-color: #f5f7fa;\r\n  border-color: #e4e7ed;\r\n  color: #c0c4cc;\r\n}\r\n</style>"]}]}