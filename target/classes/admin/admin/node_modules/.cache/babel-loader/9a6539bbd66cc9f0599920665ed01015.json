{"remainingRequest":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\config\\list.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\src\\views\\modules\\config\\list.vue","mtime":1746197745982},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\babel.config.js","mtime":1679988669673},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743781066581},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1743781066601},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1743781066696},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743781066581},{"path":"C:\\jiadianxiaoshoupingtai\\src\\main\\resources\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1743781065439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["AddOrUpdate","components","data","searchForm","name","dataList","pageIndex","pageSize","totalPage","dataListLoading","dataListSelections","showFlag","addOrUpdateFlag","contents","tableSelection","tableIndex","pageEachNum","created","getDataList","methods","_this","params","page","limit","sort","$http","url","method","then","_ref","code","list","total","sizeChangeHandle","val","currentChangeHandle","selectionChangeHandler","addOrUpdateHandler","id","type","_this2","$nextTick","$refs","addOrUpdate","init","deleteHandler","_this3","ids","Number","map","item","$confirm","concat","confirmButtonText","cancelButtonText","_ref2","$message","message","duration","onClose","error","msg","search"],"sources":["src/views/modules/config/list.vue"],"sourcesContent":["<template>\r\n  <!-- 主内容容器 -->\r\n  <div class=\"main-content\">\r\n    <!-- 使用 v-if 指令判断是否显示列表页，showFlag 为 true 时显示 -->\r\n    <div v-if=\"showFlag\" class=\"config-list-container\">\r\n      <!-- 表单部分，使用 Element UI 的表单组件，设置为内联表单，绑定搜索表单数据 -->\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"form-content\">\r\n        <!-- 表单行，用于布局 -->\r\n        <el-row class=\"ad\">\r\n          <!-- 表单元素项 -->\r\n          <el-form-item>\r\n            <!-- 新增按钮，点击调用 addOrUpdateHandler 方法 -->\r\n            <el-button\r\n                type=\"success\"\r\n                icon=\"el-icon-plus\"\r\n                @click=\"addOrUpdateHandler()\"\r\n            >新增</el-button>\r\n            <!-- 删除按钮，当选中的数据项数量小于等于 0 时禁用，点击调用 deleteHandler 方法 -->\r\n<!--        3、    :disabled=\"dataListSelections.length <= 0\"：若用户未选中任何数据项，该按钮将被禁用-->\r\n<!--        4、    @click=\"deleteHandler()\"：点击按钮时，会触发 deleteHandler 方法。\r\n如何区分批量删除还是单个删除？通过传入的id进行区分：批量删除触发deleteHandler方法没有传参deleteHandler()，而删除触发deleteHandler方法时传参deleteHandler(scope.row.id)\r\n            ids：若传入了 id 参数，则只删除该条数据；若未传入 id 参数，则删除用户选中的所有数据项。-->\r\n            <el-button\r\n                :disabled=\"dataListSelections.length <= 0\"\r\n                type=\"danger\"\r\n                icon=\"el-icon-delete\"\r\n                @click=\"deleteHandler()\"\r\n            >删除</el-button>\r\n          </el-form-item>\r\n        </el-row>\r\n      </el-form>\r\n      <!-- 表格内容容器 -->\r\n      <div class=\"table-content\">\r\n        <!-- Element UI 的表格组件，绑定表格数据，设置加载状态，监听选择项变化事件 -->\r\n<!--    2、    @selection-change=\"selectionChangeHandler\"：当用户勾选或取消勾选复选框时，会触发 selectionChangeHandler 方法。\r\n        selectionChangeHandler 方法用于获取用户选中的数据项，\r\n        其中val：此参数是一个数组，包含了用户选中的数据项。\r\n        this.dataListSelections：将选中的数据项赋值给 dataListSelections，后续使用\r\n\r\n        参数解释：\r\n        stripe为 true 时（在 Vue 中，省略属性值默认表示 true），表格会显示斑马线效果，即奇数行和偶数行使用不同的背景色，这样能增强表格的可读性。\r\n        border为 true 时，表格会显示边框，使表格的结构更加清晰。\r\n        fit为 true 时，表格的列宽会自动调整以适应表格的宽度，确保表格能够完整显示在容器内。\r\n        size设置表格的尺寸大小。Element UI 提供了多种尺寸选项，如 mini、small、medium、large 等，这里设置为 medium 表示使用中等尺寸的表格。-->\r\n        <el-table\r\n            class=\"tables\"\r\n            :data=\"dataList\"\r\n            v-loading=\"dataListLoading\"\r\n            @selection-change=\"selectionChangeHandler\"\r\n            stripe\r\n            border\r\n            fit\r\n            size=\"medium\">\r\n          <!-- 表格选择列，使用了 Element UI 框架中的 <el-table-column> 组件，用于在 <el-table> 里定义一个表格列。\r\n          根据 contents.tableSelection 的值决定是否显示 -->\r\n<!--      1、    type=\"selection\"：此属性表明该列是选择列，用户能够通过勾选复选框来选中数据项。-->\r\n\r\n<!--          参数解释：\r\n          header-align=\"center\"设置该列的表头文本的水平对齐方式为居中对齐\r\n          align=\"center\"设置该列单元格内容的水平对齐方式为居中对齐\r\n          width=\"50\"设置该列的宽度为 50 像素\r\n          -->\r\n          <el-table-column\r\n              v-if=\"contents.tableSelection\"\r\n              type=\"selection\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              width=\"50\">\r\n          </el-table-column>\r\n\r\n          <!-- 名称列，显示数据的名称字段 -->\r\n<!--          参数解释\r\n          prop=\"name\"该属性指定了表格列要显示的数据字段，每一行数据对象的 name 属性值会被显示在该列对应的单元格中。\r\n          如果 dataList 是绑定到 el-table 的数据，dataList 中的每个元素的 name 属性值就会在该列显示\r\n          :show-overflow-tooltip=\"true\"这是一个动态绑定的属性，当设置为 true 时，如果单元格内的内容过长，超出了单元格的宽度，\r\n          会以 tooltip（工具提示）的形式显示完整内容。当鼠标悬停在单元格上时，会弹出一个提示框显示完整的文本。-->\r\n          <el-table-column\r\n              prop=\"name\"\r\n              label=\"名称\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              :show-overflow-tooltip=\"true\">\r\n            <!-- 自定义单元格内容，显示当前行的名称 -->\r\n            <template slot-scope=\"scope\">\r\n              <span>{{scope.row.name}}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 图片列，显示数据的图片字段 -->\r\n          <el-table-column\r\n              prop=\"value\"\r\n              label=\"图片\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              width=\"200\"\r\n          >\r\n            <!-- 自定义单元格内容，根据图片字段的值显示图片或提示信息 -->\r\n            <template slot-scope=\"scope\">\r\n              <div v-if=\"scope.row.value\">\r\n                <!-- 拼接图片的完整 URL 并显示 -->\r\n                <img :src=\"$base.url+scope.row.value.split(',')[0]\" width=\"100\" height=\"100\">\r\n              </div>\r\n              <div v-else>无图片</div>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 操作列，固定在表格右侧 -->\r\n          <el-table-column\r\n              label=\"操作\"\r\n              header-align=\"center\"\r\n              align=\"center\"\r\n              width=\"300\"\r\n              fixed=\"right\">\r\n            <!-- 自定义单元格内容，包含详情、修改、删除按钮 -->\r\n            <template slot-scope=\"scope\">\r\n              <!-- 详情按钮，点击调用 addOrUpdateHandler 方法并传递当前行的 ID 和 'info' 参数 -->\r\n              <el-button\r\n                  type=\"success\"\r\n                  size=\"mini\"\r\n                  @click=\"addOrUpdateHandler(scope.row.id,'info')\">\r\n                <i class=\"el-icon-tickets\"></i>详情\r\n              </el-button>\r\n              <!-- 修改按钮，点击调用 addOrUpdateHandler 方法并传递当前行的 ID -->\r\n              <el-button\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                  @click=\"addOrUpdateHandler(scope.row.id)\">\r\n                <i class=\"el-icon-edit\"></i>修改\r\n              </el-button>\r\n              <!-- 删除按钮，点击调用 deleteHandler 方法并传递当前行的 ID -->\r\n              <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  @click=\"deleteHandler(scope.row.id)\">\r\n                <i class=\"el-icon-delete\"></i>删除\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- 分页组件，监听每页数量变化和当前页码变化事件 -->\r\n        <el-pagination\r\n            class=\"pagination-content\"\r\n            @size-change=\"sizeChangeHandle\"\r\n            @current-change=\"currentChangeHandle\"\r\n            :current-page=\"pageIndex\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            :page-size=\"Number(contents.pageEachNum)\"\r\n            :total=\"totalPage\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            background>\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n    <!-- 添加/修改页面，根据 addOrUpdateFlag 的值决定是否显示，传递父组件实例并设置引用 -->\r\n    <add-or-update v-if=\"addOrUpdateFlag\" :parent=\"this\" ref=\"addOrUpdate\"></add-or-update>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入添加/修改组件\r\nimport AddOrUpdate from \"./add-or-update.vue\";\r\n\r\nexport default {\r\n  // 注册组件\r\n  components: {\r\n    AddOrUpdate,\r\n  },\r\n  // 组件的数据\r\n  data() {\r\n    return {\r\n      // 搜索表单数据\r\n      searchForm: {\r\n        name: \"\"\r\n      },\r\n      // 表格数据列表\r\n      dataList: [],\r\n      // 当前页码\r\n      pageIndex: 1,\r\n      // 每页显示数量\r\n      pageSize: 10,\r\n      // 总记录数\r\n      totalPage: 0,\r\n      // 表格数据加载状态\r\n      dataListLoading: false,\r\n      // 选中的数据项列表\r\n      dataListSelections: [],\r\n      // 是否显示列表页的标志\r\n      showFlag: true,\r\n      // 是否显示添加/修改页面的标志\r\n      addOrUpdateFlag: false,\r\n      // 表格配置项\r\n      contents: {\r\n        // 是否显示表格选择列\r\n        tableSelection: true,\r\n        // 是否显示表格索引列\r\n        tableIndex: true,\r\n        // 每页显示数量\r\n        pageEachNum: 10\r\n      }\r\n    };\r\n  },\r\n  // 组件创建完成后调用的钩子函数，获取数据列表\r\n  created() {\r\n    this.getDataList();\r\n  },\r\n  // 组件的方法\r\n  methods: {\r\n    // 获取数据列表的方法\r\n    getDataList() {\r\n      // 设置表格数据加载状态为 true\r\n      this.dataListLoading = true;\r\n      // 定义请求参数\r\n      let params = {\r\n        // 当前页码\r\n        page: this.pageIndex,\r\n        // 每页显示数量\r\n        limit: this.pageSize,\r\n        // 排序字段\r\n        sort: 'id',\r\n      };\r\n\r\n      // 如果搜索表单中的名称字段有值，添加到请求参数中\r\n      //有值代表用户在搜索框输入了文字，在 params 对象中添加一个 name 属性，并把它的值设置为包含搜索关键字的模糊查询字符串\r\n      //% 位于输入的文字前面，意味着搜索结果里该文字可以出现在任意位置。\r\n      //% 位于输入的文字后面，意味着搜索结果里该文字后面可以有任意字符。\r\n      if(this.searchForm.name) {\r\n        params['name'] = '%' + this.searchForm.name + '%';\r\n      }\r\n\r\n      // 发送 HTTP 请求获取数据列表\r\n      //params 对象会作为查询参数通过 this.$http 发送到后端的 config/page 接口。\r\n      // 后端服务器接收到这些参数后，会依据 name 参数进行模糊查询，找出所有名称包含用户输入关键字的记录，再把查询结果返回给前端。\r\n      this.$http({\r\n        url: \"config/page\",\r\n        method: \"get\",\r\n        params: params\r\n      }).then(({ data }) => {\r\n        // 如果响应数据存在且状态码为 0\r\n        if (data && data.code === 0) {\r\n          // 更新表格数据列表\r\n          this.dataList = data.data.list;\r\n          // 更新总记录数\r\n          this.totalPage = data.data.total;\r\n        } else {\r\n          // 清空表格数据列表\r\n          this.dataList = [];\r\n          // 总记录数设为 0\r\n          this.totalPage = 0;\r\n        }\r\n        // 设置表格数据加载状态为 false\r\n        this.dataListLoading = false;\r\n      });\r\n    },\r\n\r\n    // 每页数量变化时的处理方法\r\n    sizeChangeHandle(val) {\r\n      // 更新每页显示数量\r\n      this.pageSize = val;\r\n      // 当前页码重置为 1\r\n      this.pageIndex = 1;\r\n      // 重新获取数据列表\r\n      this.getDataList();\r\n    },\r\n\r\n    // 当前页码变化时的处理方法\r\n    currentChangeHandle(val) {\r\n      // 更新当前页码\r\n      this.pageIndex = val;\r\n      // 重新获取数据列表\r\n      this.getDataList();\r\n    },\r\n\r\n    // 表格选择项变化时的处理方法\r\n    selectionChangeHandler(val) {\r\n      // 更新选中的数据项列表\r\n      this.dataListSelections = val;\r\n    },\r\n\r\n    // 添加/修改的处理方法\r\n    addOrUpdateHandler(id, type) {\r\n      // 隐藏列表页\r\n      this.showFlag = false;\r\n      // 显示添加/修改页面\r\n      this.addOrUpdateFlag = true;\r\n      // 在下一次 DOM 更新循环结束之后执行延迟回调\r\n      this.$nextTick(() => {\r\n        // 调用添加/修改组件的 init 方法进行初始化\r\n        this.$refs.addOrUpdate.init(id, type || 'else');\r\n      });\r\n    },\r\n\r\n    // 删除的处理方法\r\n    deleteHandler(id) {\r\n      // 获取要删除的 ID 列表\r\n      var ids = id\r\n          ? [Number(id)]\r\n          : this.dataListSelections.map(item => {\r\n            return Number(item.id);\r\n          });\r\n\r\n      // 弹出确认框，确认是否进行删除操作\r\n      this.$confirm(`确定进行[${id ? \"删除\" : \"批量删除\"}]操作?`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        // 发送 HTTP 请求进行删除操作\r\n        this.$http({\r\n          url: \"config/delete\",\r\n          method: \"post\",\r\n          data: ids\r\n        }).then(({ data }) => {\r\n          // 如果响应数据存在且状态码为 0\r\n          if (data && data.code === 0) {\r\n            // 显示成功提示信息，提示信息消失后重新获取数据列表\r\n            this.$message({\r\n              message: \"操作成功\",\r\n              type: \"success\",\r\n              duration: 1500,\r\n              onClose: () => {\r\n                this.getDataList();\r\n              }\r\n            });\r\n          } else {\r\n            // 显示错误提示信息\r\n            this.$message.error(data.msg);\r\n          }\r\n        });\r\n      });\r\n    },\r\n\r\n    // 搜索的处理方法\r\n    search() {\r\n      // 当前页码重置为 1\r\n      this.pageIndex = 1;\r\n      // 重新获取数据列表\r\n      this.getDataList();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 主内容容器样式 */\r\n.main-content {\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  min-height: calc(100vh - 84px);\r\n}\r\n\r\n/* 表单内容样式 */\r\n.form-content {\r\n  padding: 20px;\r\n  background-color: #FFFDF1;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.1);\r\n  border-radius: 6px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 表单行样式 */\r\n.ad {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n\r\n/* 表格内容样式 */\r\n.table-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* 表格样式 */\r\n.tables {\r\n  width: 100%;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 表格表头样式 */\r\n.tables >>> .el-table__header th {\r\n  background-color: var(--publicSubColor);\r\n  color: #fff !important;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 表格奇数行样式 */\r\n.tables >>> .el-table__body tr:nth-child(odd) {\r\n  background-color: rgba(184, 230, 253, 0.78);\r\n}\r\n\r\n/* 表格行悬停样式 */\r\n.tables >>> .el-table__body tr:hover td {\r\n  background-color: var(--publicSubColor) !important;\r\n  color: #333 !important;\r\n}\r\n\r\n/* 表格单元格样式 */\r\n.tables >>> .el-table__body td {\r\n  padding: 8px 0;\r\n}\r\n\r\n/* 成功按钮样式 */\r\n.el-button--success {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n  height: 32px;\r\n  font-size: 14px;\r\n  border-width: 1px;\r\n}\r\n\r\n/* 主要按钮样式 */\r\n.el-button--primary {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n  height: 32px;\r\n  font-size: 14px;\r\n  border-width: 1px;\r\n}\r\n\r\n/* 危险按钮样式 */\r\n.el-button--danger {\r\n  background-color: var(--publicSubColor);\r\n  border-color: var(--publicMainColor);\r\n  color: #333;\r\n  height: 32px;\r\n  font-size: 14px;\r\n  border-width: 1px;\r\n}\r\n\r\n/* 按钮通用样式 */\r\n.el-button {\r\n  margin: 0 5px;\r\n  padding: 7px 12px;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination-content {\r\n  margin-top: 15px;\r\n  padding: 10px 0;\r\n  text-align: right;\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]}]}